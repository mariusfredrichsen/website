{"version":3,"file":"keycon.min.js","sources":["../src/KeyController.ts","../src/utils.ts","../src/reactive.ts","../src/index.umd.ts"],"sourcesContent":["import EventEmitter, { EmitterParam, TargetParam } from \"@scena/event-emitter\";\n\nimport { isString, isArray, addEvent, removeEvent } from \"@daybrush/utils\";\nimport { getArrangeCombi, getKey, getCombi } from \"./utils\";\n\n/**\n * @typedef\n * @memberof KeyController\n */\nexport interface KeyControllerEvent extends EmitterParam {\n    inputEvent: KeyboardEvent;\n    isToggle: boolean;\n    key: string;\n    keyCode: number;\n    ctrlKey: boolean;\n    altKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n\nexport interface OnKeydown extends KeyControllerEvent {\n\n}\nexport interface OnKeyup extends KeyControllerEvent {\n\n}\nexport interface OnBlur {\n\n}\nexport interface KeyconEvents {\n    keydown: OnKeydown;\n    keyup: OnKeyup;\n    blur: OnBlur;\n}\nexport type KeyControllerEvents = KeyconEvents;\n\nlet globalKeyController!: KeyController;\n\n/**\n */\nclass KeyController extends EventEmitter<KeyconEvents & { [text: string]: any }> {\n    /**\n     */\n    public static get global() {\n        return globalKeyController || (globalKeyController = new KeyController());\n    }\n    public static setGlobal() {\n        return this.global;\n    }\n    /**\n     */\n    public ctrlKey = false;\n    /**\n     */\n    public altKey = false;\n    /**\n     *\n     */\n    public shiftKey = false;\n    /**\n     *\n     */\n    public metaKey = false;\n    /**\n     *\n     */\n    constructor(public container: Window | Document | HTMLElement = window) {\n        super();\n\n        addEvent(container, \"blur\", this.blur);\n        addEvent(container, \"keydown\", this.keydownEvent);\n        addEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public clear = (): this => {\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.shiftKey = false;\n        this.metaKey = false;\n        return this;\n    }\n    /**\n     *\n     */\n    public destroy() {\n        const container = this.container as any;\n\n        this.clear();\n        this.off();\n        removeEvent(container, \"blur\", this.blur);\n        removeEvent(container, \"keydown\", this.keydownEvent);\n        removeEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public keydown(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keydown\", comb, callback);\n    }\n    public offKeydown(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keydown\", comb, callback);\n    }\n    public offKeyup(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keyup\", comb, callback);\n    }\n    public keyup(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keyup\", comb, callback);\n    }\n    private addEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.on(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.on(`${type}.${comb}`, callback);\n        } else {\n            this.on(type, comb);\n        }\n        return this;\n    }\n    private removeEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void) | undefined,\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.off(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.off(`${type}.${comb}`, callback);\n        } else {\n            this.off(type, comb);\n        }\n        return this;\n    }\n    private triggerEvent(type: \"keydown\" | \"keyup\", e: KeyboardEvent) {\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n\n        const key = getKey(e.keyCode, e.key);\n        const isToggle = key === \"ctrl\"\n            || key === \"shift\"\n            || key === \"meta\"\n            || key === \"alt\";\n        const param: TargetParam<KeyControllerEvent> = {\n            key,\n            isToggle,\n            inputEvent: e,\n            keyCode: e.keyCode,\n            ctrlKey: e.ctrlKey,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey,\n            metaKey: e.metaKey,\n        };\n        this.trigger(type, param);\n        this.trigger(`${type}.${key}`, param);\n\n        const combi = getCombi(e, key);\n\n        combi.length > 1 && this.trigger(`${type}.${combi.join(\".\")}`, param);\n    }\n    private keydownEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keydown\", e);\n    }\n    private keyupEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keyup\", e);\n    }\n    private blur = () => {\n        this.clear();\n        this.trigger(\"blur\");\n    }\n}\n\nexport default KeyController;\n","import { names } from \"keycode\";\n\nconst codeData = {\n    \"+\": \"plus\",\n    \"left command\": \"meta\",\n    \"right command\": \"meta\",\n};\nconst keysSort = {\n    shift: 1,\n    ctrl: 2,\n    alt: 3,\n    meta: 4,\n};\n\n/**\n * @memberof KeyController\n */\nexport function getKey(keyCode: number, keyName?: string): string {\n    let key = (names[keyCode] || keyName || \"\").toLowerCase();\n\n    for (const name in codeData) {\n        key = key.replace(name, codeData[name]);\n    }\n    return key.replace(/\\s/g, \"\");\n}\n\n/**\n * @memberof KeyController\n */\nexport function getCombi(e: KeyboardEvent, key: string = getKey(e.keyCode, e.key)): string[] {\n    const keys = getModifierCombi(e);\n    keys.indexOf(key) === -1 && keys.push(key);\n\n    return keys.filter(Boolean);\n}\n\n/**\n * @memberof KeyController\n */\nexport function getModifierCombi(e: KeyboardEvent): string[] {\n    const keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n\n    return keys.filter(Boolean);\n}\n\n/**\n * @memberof KeyController\n */\nexport function getArrangeCombi(keys: string[]) {\n    const arrangeKeys = keys.slice();\n    arrangeKeys.sort((prev, next) => {\n        const prevScore = keysSort[prev] || 5;\n        const nextScore = keysSort[next] || 5;\n\n        return prevScore - nextScore;\n    });\n\n    return arrangeKeys;\n}\n","import { ReactiveAdapter, reactive, Ref, observe, ReactiveObject, Observer } from \"@cfcs/core\";\nimport KeyController, { KeyControllerEvents, KeyControllerEvent } from \"./KeyController\";\n\nexport interface ReactiveKeyControllerData {\n    ref?: Ref<HTMLElement | null | undefined>;\n    checker?: (e: KeyControllerEvent) => boolean;\n    keys: string | string[];\n}\n\nexport type ReactiveKeyController = ReactiveObject<{\n    inst: KeyController;\n    keys: string | string[];\n    isKeydown: Observer<boolean>;\n    destroy(): void;\n}>;\n\nlet instanceMap!: Map<HTMLElement | Window | Document, {\n    inst: KeyController;\n    count: number;\n}>;\n\nexport const REACTIVE: ReactiveAdapter<\n    ReactiveKeyController,\n    { isKeydown: boolean },\n    never,\n    ReactiveKeyControllerData,\n    KeyControllerEvents\n> = {\n    events: [\"keydown\", \"keyup\", \"blur\"],\n    state: { isKeydown: false },\n    mounted(data) {\n        if (!instanceMap) {\n            instanceMap = new Map();\n        }\n        const element = data.ref?.current ?? window;\n\n        let info = instanceMap.get(element);\n\n        if (!info) {\n            info = {\n                inst: new KeyController(element),\n                count: 0,\n            };\n\n            instanceMap.set(element, info);\n        }\n        ++info.count;\n\n        const keycon = info.inst;\n        const keys = data.keys;\n        const isKeydown = observe(false);\n        const checker = data.checker;\n\n        keycon.keydown(keys, (e: KeyControllerEvent) => {\n            if (!checker || checker(e)) {\n                isKeydown.current = true;\n            }\n        });\n        keycon.keyup(keys, () => {\n            isKeydown.current = false;\n        });\n        keycon.on(\"blur\", () => {\n            isKeydown.current = false;\n        });\n\n        return reactive({\n            inst: keycon,\n            keys,\n            destroy: () => keycon.destroy(),\n            isKeydown,\n        });\n    },\n    destroy({ inst }) {\n        const element = inst.container;\n        const info = instanceMap.get(element);\n\n        --info.count;\n        if (!info.count) {\n            inst.destroy();\n            instanceMap.delete(element);\n        }\n    },\n    on(inst, name, callback) {\n        const keycon = inst.inst;\n\n        if (name === \"keydown\") {\n            keycon.keydown(inst.keys, callback as any);\n        } else if (name === \"keyup\") {\n            keycon.keyup(inst.keys, callback as any);\n        } else {\n            keycon.on(name, callback as any);\n        }\n    },\n    off(inst, name, callback) {\n        const keycon = inst.inst;\n\n        if (name === \"keydown\") {\n            keycon.offKeydown(inst.keys, callback as any);\n        } else if (name === \"keyup\") {\n            keycon.offKeyup(inst.keys, callback as any);\n        } else {\n            keycon.off(name, callback as any);\n        }\n    },\n}\n","import keycon, * as others from \"./index\";\n\nfor (const name in others) {\n    (keycon as any)[name] = (others as any)[name];\n}\nexport default keycon;\n"],"names":["globalKeyController","codeData","+","left command","right command","keysSort","shift","ctrl","alt","meta","getKey","keyCode","keyName","name","key","names","toLowerCase","replace","getCombi","e","keys","getModifierCombi","indexOf","push","filter","Boolean","shiftKey","ctrlKey","altKey","metaKey","getArrangeCombi","arrangeKeys","slice","sort","prev","next","__extends","container","_super","_this","triggerEvent","clear","trigger","addEvent","blur","keydownEvent","keyupEvent","Object","KeyController","this","global","__proto","off","removeEvent","comb","callback","type","isArray","on","join","isString","param","isToggle","inputEvent","combi","length","EventEmitter","instanceMap","events","state","isKeydown","mounted","data","Map","element","ref","current","window","info","get","keycon","inst","count","set","observe","checker","keydown","keyup","reactive","destroy","_a","delete","offKeydown","offKeyup","others"],"mappings":"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"}