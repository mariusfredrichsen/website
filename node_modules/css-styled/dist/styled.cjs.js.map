{"version":3,"file":"styled.cjs.js","sources":["../src/utils.ts","../src/styled.ts","../src/index.cjs.ts"],"sourcesContent":["import stringHash from \"string-hash\";\nimport { getDocument, splitComma } from \"@daybrush/utils\";\nimport { InjectOptions } from \"./types\";\n\nexport function getHash(str: string) {\n    return stringHash(str).toString(36);\n}\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode as ShadowRoot;\n        }\n    }\n    return;\n}\nexport function replaceStyle(className: string, css: string, options: Partial<InjectOptions>) {\n    if (options.original) {\n        return css;\n    }\n    return css.replace(/([^};{\\s}][^};{]*|^\\s*){/mg, (_, selector) => {\n        const trimmedSelector = selector.trim();\n        return (trimmedSelector ? splitComma(trimmedSelector) : [\"\"]).map(subSelector => {\n            const trimmedSubSelector = subSelector.trim();\n            if (trimmedSubSelector.indexOf(\"@\") === 0) {\n                return trimmedSubSelector;\n            } else if (trimmedSubSelector.indexOf(\":global\") > -1) {\n                return trimmedSubSelector.replace(/\\:global/g, \"\");\n            } else if (trimmedSubSelector.indexOf(\":host\") > -1) {\n                return `${trimmedSubSelector.replace(/\\:host/g, `.${className}`)}`;\n            } else if (trimmedSubSelector) {\n                return `.${className} ${trimmedSubSelector}`;\n            } else {\n                return `.${className}`;\n            }\n        }).join(\", \") + \" {\";\n    });\n}\nexport function injectStyle(className: string, css: string, options: Partial<InjectOptions>, el: Node, shadowRoot?: Node) {\n    const doc = getDocument(el);\n    const style = doc.createElement(\"style\");\n\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-styled-id\", className);\n    style.setAttribute(\"data-styled-count\", \"1\");\n\n    if (options.nonce) {\n        style.setAttribute(\"nonce\", options.nonce);\n    }\n    style.innerHTML = replaceStyle(className, css, options);\n\n    (shadowRoot || doc.head || doc.body).appendChild(style);\n    return style;\n}\n","import { getHash, injectStyle, getShadowRoot } from \"./utils\";\nimport { StyledInjector, InjectOptions } from \"./types\";\n\n/**\n * Create an styled object that can be defined and inserted into the css.\n * @param - css styles\n */\nfunction styled(css: string): StyledInjector {\n    const injectClassName = \"rCS\" + getHash(css);\n\n    return {\n        className: injectClassName,\n        inject(el: HTMLElement | SVGElement, options: Partial<InjectOptions> = {}) {\n            const shadowRoot = getShadowRoot(el);\n            let styleElement = (shadowRoot || el.ownerDocument || document).querySelector<HTMLStyleElement>(`style[data-styled-id=\"${injectClassName}\"]`);\n\n            if (!styleElement) {\n                styleElement = injectStyle(injectClassName, css, options, el, shadowRoot);\n            } else {\n                const count = parseFloat(styleElement.getAttribute(\"data-styled-count\")) || 0;\n                styleElement.setAttribute(\"data-styled-count\", `${count + 1}`);\n            }\n            return {\n                destroy() {\n                    const injectCount = parseFloat(styleElement.getAttribute(\"data-styled-count\")) || 0;\n\n                    if (injectCount <= 1) {\n                        if (styleElement.remove) {\n                            styleElement.remove();\n                        } else {\n                            styleElement.parentNode?.removeChild(styleElement);\n                        }\n                        styleElement = null;\n                    } else {\n                        styleElement.setAttribute(\"data-styled-count\", `${injectCount - 1}`);\n                    }\n                },\n            };\n        },\n    };\n}\n\nexport * from \"./types\";\nexport default styled;\n","import styled from \"./styled\";\n\nmodule.exports = styled;\nexport default styled;\nexport * from \"./styled\";\n"],"names":["getHash","str","stringHash","toString","getShadowRoot","parentElement","getRootNode","rootNode","nodeType","replaceStyle","className","css","options","original","replace","_","selector","trimmedSelector","trim","splitComma","map","subSelector","trimmedSubSelector","indexOf","join","injectStyle","el","shadowRoot","doc","getDocument","style","createElement","setAttribute","nonce","innerHTML","head","body","appendChild","styled","injectClassName","inject","styleElement","ownerDocument","document","querySelector","count","parseFloat","getAttribute","destroy","injectCount","remove","parentNode","removeChild","module","exports"],"mappings":"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"}