{"version":3,"file":"styled.esm.js","sources":["../src/react-css-styled/StyledElement.tsx","../src/react-css-styled/styled.tsx"],"sourcesContent":["import { Component, createElement, version } from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport { StyledInjector, InjectResult } from \"css-styled\";\nimport { ref } from \"framework-utils\";\n\nexport class StyledElement<T extends HTMLElement | SVGElement = HTMLElement> extends Component<IObject<any>> {\n    public injector!: StyledInjector;\n    public element!: T;\n    public injectResult: InjectResult | null = null;\n    public tag: string = \"div\";\n    public render(): any {\n        const {\n            className = \"\",\n            cspNonce,\n            portalContainer,\n            ...attributes\n        } = this.props;\n        const cssId = this.injector!.className;\n        const Tag = this.tag;\n        let portalAttributes: Record<string, any> = {};\n\n        if ((version || \"\").indexOf(\"simple\") > -1 && portalContainer) {\n            portalAttributes = { portalContainer };\n        }\n\n        return createElement(Tag, {\n            \"ref\": ref(this, \"element\"),\n            \"data-styled-id\": cssId,\n            \"className\": `${className} ${cssId}`,\n            ...portalAttributes,\n            ...attributes,\n        });\n    }\n    public componentDidMount() {\n        this.injectResult = this.injector!.inject(this.element!, {\n            nonce: this.props.cspNonce,\n        });\n    }\n    public componentWillUnmount() {\n        this.injectResult!.destroy();\n        this.injectResult = null;\n    }\n    public getElement() {\n        return this.element;\n    }\n}\n","import cssStyled from \"css-styled\";\nimport {\n    createElement, forwardRef,\n    ForwardRefExoticComponent,\n    PropsWithoutRef,\n    useEffect,\n    useImperativeHandle,\n    useRef,\n} from \"react\";\nimport { StyledElement } from \"./StyledElement\";\n\nexport default function defaultStyled<T extends HTMLElement | SVGElement = HTMLElement>(\n    tag: string, css: string): typeof StyledElement & (new (...args: any[]) => StyledElement<T>) {\n    const injector = cssStyled(css);\n\n    return class Styled extends StyledElement<T> {\n        public injector = injector;\n        public tag = tag;\n    };\n}\n\n\nexport function styled<\n    Target extends HTMLElement | SVGElement = HTMLElement,\n    Props extends Record<string, any> = Record<string, any>,\n>(\n    Tag: string,\n    css: string\n): ForwardRefExoticComponent<PropsWithoutRef<Props> & React.RefAttributes<Target>> {\n    const injector = cssStyled(css);\n    const cssId = injector!.className;\n\n    return forwardRef<Target, Props>((props, ref) => {\n        const {\n            className = \"\",\n            cspNonce,\n            ...attributes\n        } = props;\n        const targetRef = useRef<Target>();\n\n        useImperativeHandle(ref, () => targetRef.current!, []);\n        useEffect(() => {\n            const injectResult = injector.inject(targetRef.current!, {\n                nonce: props.cspNonce,\n            });\n\n            return () => {\n                injectResult.destroy();\n            };\n        }, []);\n        return createElement(Tag, {\n            \"ref\": targetRef,\n            \"data-styled-id\": cssId,\n            \"className\": `${className} ${cssId}`,\n            ...attributes,\n        });\n    });\n}\n"],"names":["__extends","_this","__proto","StyledElement","prototype","_a","props","_b","className","cspNonce","portalContainer","attributes","cssId","injector","Tag","tag","portalAttributes","version","indexOf","createElement","ref","injectResult","inject","element","nonce","destroy","Component","defaultStyled","css","cssStyled","styled","forwardRef","targetRef","useRef","useImperativeHandle","current","useEffect"],"mappings":"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"}